// instrument by jscoverage, do not modifly this file
(function () {
  var BASE;
  if (typeof global === 'object') {
    BASE = global;
  } else if (typeof window === 'object') {
    BASE = window;
  } else {
    throw new Error('[jscoverage] unknow ENV!');
  }
  if (!BASE._$jscoverage) {
    BASE._$jscoverage = {};
    BASE._$jscoverage_cond = {};
    BASE._$jscoverage_done = function (file, line, express) {
      if (arguments.length === 2) {
        BASE._$jscoverage[file][line] ++;
      } else {
        BASE._$jscoverage_cond[file][line] ++;
        return express;
      }
    };
    BASE._$jscoverage_init = function (base, file, lines) {
      var tmp = [];
      for (var i = 0; i < lines.length; i ++) {
        tmp[lines[i]] = 0;
      }
      base[file] = tmp;
    };
  }
})();
_$jscoverage_init(_$jscoverage, "/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js",[2,2,2,4,5,8,11,12,13,14,19,23,24,27,30,33,34,36,38,40,42,44,48,49,50,51,52,53,55,56,57,58,62,63,65,66,67,68,72,73,74,77,78,79,80,81,82,83,85,88,89,90,91,92,93,94,96,99,100,103,104,105,106,109,110,111,112,113,114,115,116,119,120,124,125,126,127,129,130,134,135,136,139,140,141,142,143,144,146,147,148,149,151,152,153,154,156,157,159,163,164,170,171,172,173,174,175,176,180,181,182,183,184,185,186,189,190,191,192,193,194,195,199,200,201,202,203,204,205,206,211,212,213,215,216,219,220,221,224,225,226,228,231,232,233,234,235,236,239,242,246,247,250,253,254,257,262,263,264,265,266,269,270,271,272,273,277,278,279,280,281,282,283,284,285,287,288,289,291,292,296,297,298,299,303,304,306,307,308,310,313,314,316,317,318,320,321,323,325,327,329,330,332,335,336,337,339,340,343,344,345,346,350,351,352,353,354,355,358,359,361,367,368,369,376,377,381,382,385,386,387,389,391,392,393,394,395,397,398,401,402,404,405,406,407,412,413,414,415,416,417,422,423,424,425,427,429,430,432,433,435,436,437,439,440,442,443,447,448,449,453,454,455,459,460,461,462,463,464,466,467,469,472,473,475,476,477,479,480,482,483,485,489,490,491,492,493,495,497,499,502,503,506,507,508,509,511,512,514,515,520,521,522,523,524,526,529,530,531,532,534,538,539,540,541,542,544,545,546,548,549,550,552,553,557,558,559,560,561,563,567,568,569,570,571,575,576,578,579,580,581,582,584,585,589,590,591,592,596,597,598,599,600,601,603,608,612,614,616,618,620,622,624,626,628,630,632,634,636,638,646,647,648,661,662,663,664,669,670,671,676,677,679,680,681,682,683,685,688,689,690,691,696,698,699,702,703,704,705,706,707,709,710,711,712,717,718,719,720,721,722,725,726,727,732,733,734,735,736,737,740,741,742,743,744,745,747,748,749,750,751,752,756,757,758,759,760,761,765,766,768,769,771,772,773,774,775,776,777,778,781,784,785,787,790,791,794,795,796,798,801,802,803,805,809,810,811,812,814,815,816,817,818,821,824,825,826,827,829,830,831,833,834,835,836,838,841,842,843,844,845,846,847,848,849,851,852,855,859,863,864,867,870,873,874,875,876,877,878,879,880,881,884,887,888,889,890,891,892,893,894,895,897,900,901,903,904,905,906,908,911,912,913,914,915,916,917,918,920,922,923,925,926,927,928,930,933,934,935,936,937,938,939,940,943,944,945,948,949,950,951,952,954,956,959,960,961,962,963,964,965,966,967,968,969,970,973,974,977,978,979,980,981,982,984,987,988,989,990,991,992,995,996,997,1002,1003,1004,1005,1008,1009,1012,1013,1014,1015,1016,1018,1020,1021,1023,1024,1026,1029,1030,1032,1033,1035,1036,1038,1044,1045,1046,1048,1052]);
_$jscoverage_init(_$jscoverage_cond, "/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js",[4,12,23,51,52,56,62,66,81,92,111,113,115,126,129,153,175,190,201,201,203,205,205,211,225,234,235,246,284,288,291,298,329,394,416,429,432,436,439,442,448,454,463,466,476,508,514,541,545,552,569,569,600,662,704,704,709,720,725,744,747,751,756,760,765,765,768,768,775,777,784,795,802,811,817,826,830,848,863,879,893,894,900,917,922,922,938,949,951,968,990,995,1014,1015,1020,1020,1023,1023,1029,1032,1032,1035,1035,1045]);
_$jscoverage["/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js"].source = ["// Generated by CoffeeScript 1.4.0","var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };","","if (!window.TableStakesLib) {","  window.TableStakesLib = {};","}","","window.TableStakesLib.Column = (function() {","","  function Column(options) {","    var key;","    if (options != null) {","      for (key in options) {","        this[key] = options[key];","      }","    }","  }","","  return Column;","","})();","","if (!window.TableStakesLib) {","  window.TableStakesLib = {};","}","","window.TableStakesLib.Events = (function() {","","  function Events(options) {","    this.core = options.core;","  }","","  Events.prototype.keydown = function(node, d, column) {","    switch (d3.event.keyCode) {","      case 9:","        return this._handleTab(node, d, column);","      case 38:","        return this._handleUp(node, d, column);","      case 40:","        return this._handleDown(node, d, column);","      case 13:","        return this._handleEnter(node, d, column);","      case 27:","        return this._handleEscape(node, d, column);","    }","  };","","  Events.prototype._handleTab = function(node, d, column) {","    var currentindex, nextNode, prevNode;","    currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);","    if (d3.event.shiftKey === false) {","      if (currentindex < this.core.columns.length - 1) {","        d.activatedID = this.core.columns[currentindex + 1].id;","      } else {","        nextNode = this.core.utils.findNextNode(d, this.core.nodes);","        if (nextNode !== null) {","          nextNode.activatedID = this.core.columns[0].id;","          d.activatedID = null;","        }","      }","    } else {","      if (currentindex > 0) {","        d.activatedID = this.core.columns[currentindex - 1].id;","      } else {","        prevNode = this.core.utils.findPrevNode(d, this.core.nodes);","        if (prevNode !== null) {","          prevNode.activatedID = this.core.columns[this.core.columns.length - 1].id;","          d.activatedID = null;","        }","      }","    }","    d3.event.preventDefault();","    d3.event.stopPropagation();","    return this.core.update();","  };","","  Events.prototype._handleUp = function(node, d, column) {","    var currentindex, prevNode;","    prevNode = this.core.utils.findPrevNode(d, this.nodes);","    currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);","    if (prevNode !== null) {","      prevNode.activatedID = this.core.columns[currentindex].id;","      d.activatedID = null;","    }","    return this.core.update();","  };","","  Events.prototype._handleDown = function(node, d, column) {","    var currentindex, nextNode;","    nextNode = this.core.utils.findNextNode(d);","    currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);","    if (nextNode !== null) {","      nextNode.activatedID = this.core.columns[currentindex].id;","      d.activatedID = null;","    }","    return this.core.update();","  };","","  Events.prototype._handleEnter = function(node, d, column) {","    return this.blur(node, d, column);","  };","","  Events.prototype._handleEscape = function(node, d, column) {","    d3.select(node).node().value = d[d.activatedID];","    d.activatedID = null;","    return this.core.update();","  };","","  Events.prototype.blur = function(node, d, column) {","    var val;","    if (!this.core.table.isInRender) {","      val = d3.select(node).text();","      if (val !== d[d.activatedID]) {","        this._applyChangedState(d);","        if (column.onEdit) {","          column.onEdit(d.id, column.id, val);","        }","      }","      d.activatedID = null;","      return this.core.update();","    }","  };","","  Events.prototype._applyChangedState = function(d) {","    var _ref;","    if ((_ref = d.changedID) == null) {","      d.changedID = [];","    }","    if (d.changedID.indexOf(d.activatedID) === -1) {","      return d.changedID.push(d.activatedID);","    }","  };","","  Events.prototype.dragStart = function(tr, d) {","    this._makeRowDraggable(tr);","    return this.initPosition = $(tr).position();","  };","","  Events.prototype._makeRowDraggable = function(tr) {","    var cellWidths, rowWidth, self, tableEl;","    self = this;","    rowWidth = $(tr).width();","    cellWidths = _.map($(tr).find('td'), function(td) {","      return $(td).width();","    });","    d3.select(tr).classed('dragged', true);","    $(tr).width(rowWidth);","    _.each($(tr).find('td'), function(td, i) {","      return $(td).width(cellWidths[i]);","    });","    tableEl = this.core.table.el();","    return d3.selectAll(tableEl + ' tbody tr:not(.dragged), ' + tableEl + ' thead tr').on('mouseover', function(d, i) {","      if (i > 0) {","        i -= 1;","      }","      self.insertAtIndex = i;","      return d3.select(this).classed('draggable-destination', true);","    }).on('mouseout', function(d) {","      return d3.select(this).classed('draggable-destination', false);","    });","  };","","  Events.prototype.dragMove = function(tr, d, x, y) {","    return $(tr).css({","      left: this.initPosition.left + d3.event.x,","      top: this.initPosition.top + d3.event.y","    });","  };","","  Events.prototype.dragEnd = function(tr, d) {","    var tableEl;","    d3.select(tr).classed('dragged', false);","    tableEl = this.core.table.el();","    d3.selectAll(tableEl + ' tbody tr, ' + tableEl + ' thead tr').classed('draggable-destination', false).on('mouseover', null).on('mouseout', null);","    if (this.core.table.onDrag) {","      return this.core.table.onDrag()(d.id, this.insertAtIndex);","    }","  };","","  Events.prototype.resizeDrag = function(context, node, d, _, unshift) {","    var column_newX, column_x, th;","    th = node.parentNode;","    column_x = parseFloat(d3.select(th).attr(\"width\"));","    column_newX = d3.event.x;","    d3.select(th).attr(\"width\", column_newX + \"px\");","    return d3.select(th).style(\"width\", column_newX + \"px\");","  };","","  Events.prototype.editableClick = function(node, d, _, unshift) {","    if (!d3.select(node).classed('active')) {","      this.core.utils.deactivateAll(this.core.data[0]);","      d.activatedID = d3.select(d3.select(node).node()).attr(\"meta-key\");","      this.core.update();","      d3.event.stopPropagation();","      return d3.event.preventDefault();","    }","  };","","  Events.prototype.nestedClick = function(node, d, _, unshift) {","    var self;","    if (d3.event.shiftKey && !unshift) {","      self = this;","      if (d.values) {","        d.values.forEach(function(node) {","          if (node.values || node._values) {","            return self.nestedClick(this, node, 0, true);","          }","        });","      }","    } else {","      if (d.values) {","        d._values = d.values;","        d.values = null;","      } else {","        d.values = d._values;","        d._values = null;","      }","    }","    this.core.update();","    d3.event.preventDefault();","    return d3.event.stopPropagation();","  };","","  Events.prototype.toggleBoolean = function(node, d, _, unshift, column) {","    if (column.onEdit) {","      column.onEdit(d.id, column.id, !d[column.id]);","    }","    return this.core.update();","  };","","  Events.prototype.selectClick = function(node, d, _, unshift, column) {","    var val;","    val = d3.event.target.value;","    if (val !== d[column.id]) {","      if (column.onEdit) {","        column.onEdit(d.id, column.id, val);","      }","    }","    return this.core.update();","  };","","  return Events;","","})();","","if (!window.TableStakesLib) {","  window.TableStakesLib = {};","}","","window.TableStakesLib.Core = (function() {","","  function Core(options) {","    this._makeResizable = __bind(this._makeResizable, this);","    this.utils = new window.TableStakesLib.Utils({","      core: this","    });","    this.events = new window.TableStakesLib.Events({","      core: this","    });","  }","","  Core.prototype.set = function(options) {","    this.table = options.table;","    this.selection = options.selection;","    this.data = options.data;","    return this.columns = this.table.columns();","  };","","  Core.prototype.update = function() {","    var _this = this;","    this.table.isInRender = true;","    return this.selection.transition().call(function(selection) {","      return _this.table.update(selection);","    });","  };","","  Core.prototype.render = function() {","    var wrap, wrapEnter;","    this._buildData();","    wrap = d3.select(this.table.el()).selectAll(\"div\").data([[this.nodes]]);","    wrapEnter = wrap.enter().append(\"div\");","    this.tableEnter = wrapEnter.append(\"table\");","    this.tableObject = wrap.select(\"table\").classed(this.table.tableClassName, true).attr(\"style\", \"table-layout:fixed;\");","    if (this.table.header) {","      this._renderHead(this.tableObject);","    }","    this._renderBody(this.tableObject);","    if (this.table.isDraggable() !== false) {","      this._makeDraggable(this.tableObject);","    }","    if (this.table.isDeletable() !== false) {","      return this._makeDeletable(this.tableObject);","    }","  };","","  Core.prototype._buildData = function() {","    var depth;","    if (!this.data[0]) {","      this.data[0] = {","        id: this.table.noData","      };","    }","    this.tree = d3.layout.tree().children(function(d) {","      return d.values;","    });","    this.nodes = this.tree.nodes(this.data[0]);","    depth = d3.max(this.nodes, function(node) {","      return node.depth;","    });","    return this.tree.size([this.table.height, depth * this.table.childIndent]);","  };","","  Core.prototype._renderHead = function(tableObject) {","    var self, th, theadRow,","      _this = this;","    self = this;","    theadRow = tableObject.selectAll(\"thead\").data(function(d) {","      return d;","    }).enter().append(\"thead\").append(\"tr\");","    th = theadRow.selectAll(\"th\").data(this.columns).enter().append(\"th\").text(function(d) {","      return d.label;","    }).attr(\"ref\", function(d, i) {","      return i;","    }).attr(\"class\", function(d) {","      return _this._columnClasses(d);","    }).style('width', function(d) {","      return d.width;","    });","    if (this.table.isResizable()) {","      theadRow.selectAll(\"th\").call(this._makeResizable);","    }","    return this;","  };","","  Core.prototype._renderBody = function(tableObject) {","    this.tbody = tableObject.selectAll(\"tbody\").data(function(d) {","      return d;","    });","    this.tbody.enter().append(\"tbody\");","    return this._renderRows();","  };","","  Core.prototype._enterRows = function() {","    var _this = this;","    return this.enterRows = this.rows.enter().append(\"tr\").attr(\"class\", function(d) {","      return _this._rowClasses(d);","    });","  };","","  Core.prototype._updateRows = function() {","    var self;","    self = this;","    this.updateRows = this.rows.order();","    this._addRowEventHandling();","    return this.updateRows.select('.expandable').classed('folded', this.utils.folded);","  };","","  Core.prototype._addRowEventHandling = function() {","    var addEvent, events,","      _this = this;","    events = {","      click: 'elementClick',","      dblclick: 'elementDblclick',","      mouseover: 'elementMouseover',","      mouseout: 'elementMouseout'","    };","    addEvent = function(key, value) {","      return _this.updateRows.on(key, function(d) {","        return _this.table.dispatch.elementClick({","          row: _this,","          data: d,","          pos: [d.x, d.y]","        });","      });","    };","    return _.each(events, function(value, key) {","      return addEvent(key, value);","    });","  };","","  Core.prototype._exitRows = function() {","    return this.rows.exit().remove();","  };","","  Core.prototype._renderRows = function() {","    this.rows = this.tbody.selectAll(\"tr\").data((function(d) {","      return d;","    }), function(d) {","      return d.id;","    });","    this._enterRows();","    this._updateRows();","    this._exitRows();","    if (this.enterRows[0][0]) {","      d3.select(this.enterRows[0][0]).style(\"display\", \"none\");","    }","    this._renderEnterRows();","    return this._renderUpdateRows();","  };","","  Core.prototype._renderEnterRows = function() {","    var self,","      _this = this;","    self = this;","    return this.columns.forEach(function(column, column_index) {","      return _this.enterRows.append('td').each(function(d, i) {","        return self._renderCell(column, d, this);","      });","    });","  };","","  Core.prototype._renderUpdateRows = function() {","    var self;","    self = this;","    return this.updateRows.selectAll('td').each(function(d, i) {","      if (self.columns[i] != null) {","        return self._renderCell(self.columns[i], d, this);","      }","    });","  };","","  Core.prototype._renderCell = function(column, d, td) {","    var _this = this;","    d3.select(td).attr('meta-key', column.id).attr('class', function(d) {","      return _this._cellClasses(d, column);","    }).text(function(d) {","      return d[column.id] || '-';","    });","    if (this.utils.ourFunctor(column.isNested, d)) {","      this._makeNested(td);","    }","    if (this.utils.ourFunctor(column.isEditable, d)) {","      this._makeEditable(d, td, column);","    }","    this._makeChanged(d, td, column);","    if (column.editor === 'boolean') {","      this._makeBoolean(d, td, column);","    }","    if (column.editor === 'select') {","      this._makeSelect(d, td, column);","    }","    if (column.showCount) {","      return this._addShowCount(d, td, column);","    }","  };","","  Core.prototype._columnClasses = function(column) {","    if (typeof column.classes !== 'function') {","      return column.classes;","    }","  };","","  Core.prototype._rowClasses = function(d) {","    if (this.table.rowClasses() != null) {","      return this.table.rowClasses()(d);","    }","  };","","  Core.prototype._cellClasses = function(d, column) {","    var val;","    val = [];","    val.push(column.classes != null ? typeof column.classes === 'function' ? column.classes(d) : column.classes : void 0);","    if (column === this.columns[0]) {","      val.push(this.utils.nestedIcons(d));","    }","    if (d.classes != null) {","      val.push(d.classes);","    }","    return val.join(' ');","  };","","  Core.prototype._makeDraggable = function(table) {","    var self,","      _this = this;","    self = this;","    if (table.selectAll('th.draggable-head')[0].length === 0) {","      table.selectAll(\"thead tr\").append('th').attr('width', '15px').classed('draggable-head', true);","    }","    this.enterRows.append('td').classed('draggable', function(d) {","      return _this.utils.ourFunctor(_this.table.isDraggable(), d);","    });","    return this.updateRows.selectAll('td.draggable').on('mouseover', function(d) {","      return self._setDragBehavior();","    }).on('mouseout', function(d) {","      return self._clearDragBehavior();","    });","  };","","  Core.prototype._setDragBehavior = function() {","    var dragBehavior, self;","    self = this;","    dragBehavior = d3.behavior.drag().origin(Object).on('dragstart', function(d, x, y) {","      return self.events.dragStart(this, d, x, y);","    }).on('drag', function(d, x, y) {","      return self.events.dragMove(this, d, x, y);","    }).on('dragend', function(d, x, y) {","      return self.events.dragEnd(this, d, x, y);","    });","    return self.updateRows.call(dragBehavior);","  };","","  Core.prototype._clearDragBehavior = function() {","    return this.updateRows.on('dragstart', null).on('drag', null).on('dragend', null);","  };","","  Core.prototype._makeDeletable = function(table) {","    var _this = this;","    if (table.selectAll('th.deletable-head')[0].length === 0) {","      table.selectAll(\"thead tr\").append('th').attr('width', '15px').classed('deletable-head', true);","    }","    return this.updateRows.append('td').classed('deletable', function(d) {","      return _this.utils.ourFunctor(_this.table.isDeletable(), d);","    }).on('click', function(d) {","      if (_this.utils.ourFunctor(_this.table.isDeletable(), d)) {","        return _this.table.onDelete()(d.id);","      }","    });","  };","","  Core.prototype._makeResizable = function(th) {","    var dragBehavior, self;","    self = this;","    dragBehavior = d3.behavior.drag().on(\"drag\", function(a, b, c) {","      return self.events.resizeDrag(self, this, a, b, c);","    });","    return th.classed('resizeable', true).append(\"div\").classed('resizeable-handle right', true).call(dragBehavior);","  };","","  Core.prototype._makeNested = function(td) {","    var _this = this;","    return d3.select(td).attr('class', function(d) {","      return _this.utils.nestedIcons(d);","    }).on('click', function(a, b, c) {","      return _this.events.nestedClick(_this, a, b, c);","    });","  };","","  Core.prototype._makeEditable = function(d, td, column) {","    var eventType, self;","    self = this;","    if (_.contains(['boolean', 'select'], column.editor)) {","      return;","    }","    d3.select(td).classed('editable', true);","    if (column.editor === 'calendar') {","      d3.select(td).classed('calendar', true);","    }","    eventType = column.isNested ? 'dblclick' : 'click';","    d3.select(td).on(eventType, function(a, b, c) {","      return self.events.editableClick(this, a, b, c, column);","    });","    if (d.activatedID === column.id) {","      return this._makeActive(d, td, column);","    }","  };","","  Core.prototype._makeActive = function(d, td, column) {","    var self;","    self = this;","    return d3.select(td).classed('active', true).attr('contentEditable', true).on('keydown', function(d) {","      return self.events.keydown(this, d, column);","    }).on('blur', function(d) {","      return self.events.blur(this, d, column);","    }).node().focus();","  };","","  Core.prototype._makeChanged = function(d, td, column) {","    var i;","    if (d.changedID && (i = d.changedID.indexOf(column.id)) !== -1) {","      d3.select(td).classed('changed', true);","      return d.changedID.splice(i, 1);","    }","  };","","  Core.prototype._makeSelect = function(d, td, column) {","    var group, select,","      _this = this;","    select = d3.select(td).html('<select class=\"expand-select\"></select>').select('.expand-select');","    select.append('option').style('cursor', 'pointer').text(d[column.id]);","    group = select.append('optgroup').style('cursor', 'pointer');","    _.each(_.without(column.selectOptions, d[column.id]), function(item) {","      return group.append('option').style('cursor', 'pointer').text(item);","    });","    return select.on('change', function(a, b, c) {","      return _this.events.selectClick(_this, a, b, c, column);","    });","  };","","  Core.prototype._makeBoolean = function(d, td, column) {","    var _this = this;","    return d3.select(td).classed('boolean-true', d[column.id]).classed('boolean-false', !d[column.id]).on('click', function(a, b, c) {","      return _this.events.toggleBoolean(_this, a, b, c, column);","    });","  };","","  Core.prototype._addShowCount = function(d, td, column) {","    var count, _ref, _ref1;","    count = ((_ref = d.values) != null ? _ref.length : void 0) || ((_ref1 = d._values) != null ? _ref1.length : void 0);","    return d3.select(td).append('span').classed('childrenCount', true).text(function(d) {","      if (count) {","        return '(' + count + ')';","      } else {","        return '';","      }","    });","  };","","  return Core;","","})();","","window.TableStakes = (function() {","","  TableStakes.prototype.id = Math.floor(Math.random() * 10000);","","  TableStakes.prototype.header = true;","","  TableStakes.prototype.noData = \"No Data Available.\";","","  TableStakes.prototype.childIndent = 20;","","  TableStakes.prototype.tableClassName = \"tablestakes\";","","  TableStakes.prototype.gridData = [];","","  TableStakes.prototype.gridFilteredData = [];","","  TableStakes.prototype.tableObject = null;","","  TableStakes.prototype.isInRender = false;","","  TableStakes.prototype.filterCondition = [];","","  TableStakes.prototype.dispatch = d3.dispatch(\"elementClick\", \"elementDblclick\", \"elementMouseover\", \"elementMouseout\");","","  TableStakes.prototype._columns = [];","","  TableStakes.prototype._margin = {","    top: 0,","    right: 0,","    bottom: 0,","    left: 0","  };","","  function TableStakes(options) {","    var key;","    this.core = new window.TableStakesLib.Core;","    this._synthesize({","      data: [],","      el: null,","      isDeletable: false,","      onDelete: null,","      isResizable: true,","      isSortable: false,","      dragMode: null,","      isDraggable: false,","      onDrag: null,","      isDragDestination: false,","      rowClasses: null","    });","    this.filterCondition = d3.map([]);","    if (options != null) {","      for (key in options) {","        this.set(key, options[key]);","      }","    }","  }","","  TableStakes.prototype.render = function() {","    var _this = this;","    this.gridData = [","      {","        values: this.data()","      }","    ];","    this.columns().forEach(function(column, i) {","      return _this.gridData[0][column['id']] = column['id'];","    });","    this.setID(this.gridData[0], \"0\");","    this.gridFilteredData = this.gridData;","    this._setFilter(this.gridFilteredData[0], this.filterCondition);","    d3.select(this.el()).html('').datum(this.gridFilteredData).call(function(selection) {","      return _this.update(selection);","    });","    return this;","  };","","  TableStakes.prototype.update = function(selection) {","    var _this = this;","    selection.each(function(data) {","      _this.core.set({","        selection: selection,","        table: _this,","        data: data","      });","      return _this.core.render();","    });","    this.isInRender = false;","    return this;","  };","","  TableStakes.prototype.dispatchManualEvent = function(target) {","    var mousedownEvent;","    if (target.dispatchEvent && document.createEvent) {","      mousedownEvent = document.createEvent(\"MouseEvent\");","      mousedownEvent.initMouseEvent(\"dblclick\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);","      target.dispatchEvent(mousedownEvent);","    } else {","      if (document.createEventObject) {","        mousedownEvent = document.createEventObject(window.event);","        mousedownEvent.button = 1;","        target.fireEvent(\"dblclick\", mousedownEvent);","      }","    }","  };","","  TableStakes.prototype.setID = function(node, prefix) {","    var _this = this;","    node['_id'] = prefix;","    if (node.values) {","      node.values.forEach(function(subnode, i) {","        return _this.setID(subnode, prefix + \"_\" + i);","      });","    }","    if (node._values) {","      return node._values.forEach(function(subnode, i) {","        return _this.setID(subnode, prefix + \"_\" + i);","      });","    }","  };","","  TableStakes.prototype.filter = function(key, value) {","    value = value || '';","    value = value.toString().toUpperCase();","    this.filterCondition.set(key, value);","    this._setFilter(this.gridFilteredData[0], this.filterCondition);","    return this.render();","  };","","  TableStakes.prototype._setFilter = function(data, filter) {","    var i, key, matchFound, self, _data, _i, _j, _k, _len, _ref, _ref1, _ref2;","    self = this;","    data || (data = []);","    if (typeof data._hiddenvalues === \"undefined\") {","      data['_hiddenvalues'] = [];","    }","    if (data.values) {","      data.values = data.values.concat(data._hiddenvalues);","      data._hiddenvalues = [];","      for (i = _i = _ref = data.values.length - 1; _i >= 0; i = _i += -1) {","        if (this._setFilter(data.values[i], filter) === null) {","          data._hiddenvalues.push(data.values.splice(i, 1)[0]);","        }","      }","    }","    if (data._values) {","      data._values = data._values.concat(data._hiddenvalues);","      data._hiddenvalues = [];","      for (i = _j = _ref1 = data._values.length - 1; _j >= 0; i = _j += -1) {","        if (this._setFilter(data._values[i], filter) === null) {","          data._hiddenvalues.push(data._values.splice(i, 1)[0]);","        }","      }","    }","    if (data.values && data.values.length > 0) {","      return data;","    }","    if (data._values && data._values.length > 0) {","      return data;","    }","    matchFound = true;","    _ref2 = filter.keys();","    for (_k = 0, _len = _ref2.length; _k < _len; _k++) {","      key = _ref2[_k];","      if (data[key]) {","        _data = data[key].toUpperCase();","        if (_data.indexOf(filter.get(key)) === -1) {","          matchFound = false;","        }","      } else {","        matchFound = false;","      }","    }","    if (matchFound) {","      return data;","    }","    return null;","  };","","  TableStakes.prototype.get = function(key) {","    return this[key];","  };","","  TableStakes.prototype.set = function(key, value, options) {","    if (key != null) {","      this[key] = (value != null ? value : true);","    }","    return this;","  };","","  TableStakes.prototype.is = function(key) {","    if (this[key]) {","      return true;","    } else {","      return false;","    }","  };","","  TableStakes.prototype.margin = function(val) {","    var side, _i, _len, _ref;","    if (val == null) {","      return this._margin;","    }","    _ref = ['top', 'right', 'bottom', 'left'];","    for (_i = 0, _len = _ref.length; _i < _len; _i++) {","      side = _ref[_i];","      if (typeof val[side] !== \"undefined\") {","        this._margin[side] = val[side];","      }","    }","    return this;","  };","","  TableStakes.prototype.columns = function(val) {","    var _this = this;","    if (val == null) {","      return this._columns;","    }","    this._columns = [];","    if (!_.isArray(val)) {","      val = [val];","    }","    _.each(val, function(column) {","      var c;","      c = new window.TableStakesLib.Column(column);","      return _this._columns.push(c);","    });","    return this;","  };","","  TableStakes.prototype._synthesize = function(hash) {","    var _this = this;","    return _.each(hash, function(value, key) {","      var func;","      _this['_' + key] = value;","      func = function(key) {","        return _this[key] = function(val) {","          if (val == null) {","            return this['_' + key];","          }","          this['_' + key] = val;","          return this;","        };","      };","      return func(key);","    });","  };","","  return TableStakes;","","})();","","if (!window.TableStakesLib) {","  window.TableStakesLib = {};","}","","window.TableStakesLib.Utils = (function() {","","  function Utils(options) {","    this.core = options.core;","  }","","  Utils.prototype.getCurrentColumnIndex = function(id) {","    var col, currentindex, i, _i, _len, _ref;","    currentindex = this.core.columns.length;","    _ref = this.core.columns;","    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {","      col = _ref[i];","      if (col.id === id) {","        currentindex = i;","        break;","      }","    }","    return currentindex;","  };","","  Utils.prototype.findNextNode = function(d) {","    var i, idPath, leaf, nextNodeID, root, _i, _j, _len, _ref, _ref1;","    nextNodeID = null;","    _ref = this.core.nodes;","    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {","      leaf = _ref[i];","      if (leaf._id === d._id) {","        if (this.core.nodes.length !== i + 1) {","          nextNodeID = this.core.nodes[i + 1]._id;","        }","        break;","      }","    }","    if (nextNodeID === null) {","      return null;","    }","    idPath = nextNodeID.split(\"_\");","    root = this.core.data[0];","    for (i = _j = 1, _ref1 = idPath.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {","      root = root.values[parseInt(idPath[i])];","    }","    return root;","  };","","  Utils.prototype.findPrevNode = function(d) {","    var i, idPath, leaf, prevNodeID, root, _i, _j, _len, _ref, _ref1;","    prevNodeID = null;","    _ref = this.core.nodes;","    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {","      leaf = _ref[i];","      if (leaf._id === d._id) {","        break;","      }","      prevNodeID = leaf._id;","    }","    if (prevNodeID === null || prevNodeID === \"0\") {","      return null;","    }","    idPath = prevNodeID.split(\"_\");","    root = this.core.data[0];","    for (i = _j = 1, _ref1 = idPath.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {","      root = root.values[parseInt(idPath[i])];","    }","    return root;","  };","","  Utils.prototype.removeNode = function(d) {","    var currentindex, i, parent, _i, _ref;","    parent = d.parent;","    currentindex = parent.values.length;","    for (i = _i = 0, _ref = parent.values.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {","      if (d._id === parent.values[i]._id) {","        currentindex = i;","        break;","      }","    }","    parent.values.splice(currentindex, 1);","    parent.children.splice(currentindex, 1);","    return this.core.table.setID(parent, parent._id);","  };","","  Utils.prototype.appendNode = function(d, child) {","    if (d.values) {","      d.values.push(child);","    } else if (d._values) {","      d._values.push(child);","    } else {","      d.values = [child];","    }","    return this.core.table.setID(d, d._id);","  };","","  Utils.prototype.pastNode = function(d, child) {","    var array, index, n, _i, _len, _ref;","    n = 0;","    array = [];","    _ref = d.parent.values;","    for (_i = 0, _len = _ref.length; _i < _len; _i++) {","      index = _ref[_i];","      array[n] = index;","      n = n + 1;","      if (d === index) {","        array[n] = child;","        n = n + 1;","      }","    }","    d.parent.values = array;","    return this.core.table.setID(d.parent, d.parent._id);","  };","","  Utils.prototype.findNodeByID = function(id) {","    var i, idPath, root, _i, _ref;","    idPath = id.split(\"_\");","    root = this.core.table.gridFilteredData[0];","    for (i = _i = 1, _ref = idPath.length - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {","      root = root.values[parseInt(idPath[i])];","    }","    return root;","  };","","  Utils.prototype.deactivateAll = function(d) {","    var _this = this;","    d.activatedID = null;","    if (d.values) {","      d.values.forEach(function(item, index) {","        return _this.core.utils.deactivateAll(item);","      });","    }","    if (d._values) {","      d._values.forEach(function(item, index) {","        return _this.core.utils.deactivateAll(item);","      });","    }","  };","","  Utils.prototype.hasChildren = function(d) {","    var values;","    values = d.values || d._values;","    return values && values.length;","  };","","  Utils.prototype.folded = function(d) {","    return d._values && d._values.length;","  };","","  Utils.prototype.nestedIcons = function(d) {","    var indent;","    if (d.depth !== 1) {","      if ((d.depth - 1) < 6) {","        indent = d.depth - 1;","      } else {","        indent = 6;","      }","      if (d._values && d._values.length) {","        return 'expandable' + ' ' + 'indent' + indent;","      } else {","        if (d.values && d.values.length) {","          return 'collapsible' + ' ' + 'indent' + indent;","        } else {","          return 'indent' + (indent + 1);","        }","      }","    } else if (d.children == null) {","      return 'indent1';","    } else {","      if (d._values && d._values.length) {","        return 'expandable';","      } else {","        if (d.values && d.values.length) {","          return 'collapsible';","        } else {","          return 'indent1';","        }","      }","    }","  };","","  Utils.prototype.ourFunctor = function(attr, element) {","    if (typeof attr === 'function') {","      return attr(element);","    } else {","      return attr;","    }","  };","","  return Utils;","","})();",""];
_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 2);
var __bind = function(fn, me) {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 2);
    return function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 2);
        return fn.apply(me, arguments);
    };
};

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 4);
if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 4, !window.TableStakesLib)) {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 5);
    window.TableStakesLib = {};
}

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 8);
window.TableStakesLib.Column = function() {
    function Column(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 11);
        var key;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 12);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 12, options != null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 13);
            for (key in options) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 14);
                this[key] = options[key];
            }
        }
    }
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 19);
    return Column;
}();

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 23);
if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 23, !window.TableStakesLib)) {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 24);
    window.TableStakesLib = {};
}

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 27);
window.TableStakesLib.Events = function() {
    function Events(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 30);
        this.core = options.core;
    }
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 33);
    Events.prototype.keydown = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 34);
        switch (d3.event.keyCode) {
          case 9:
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 36);
            return this._handleTab(node, d, column);
          case 38:
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 38);
            return this._handleUp(node, d, column);
          case 40:
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 40);
            return this._handleDown(node, d, column);
          case 13:
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 42);
            return this._handleEnter(node, d, column);
          case 27:
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 44);
            return this._handleEscape(node, d, column);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 48);
    Events.prototype._handleTab = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 49);
        var currentindex, nextNode, prevNode;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 50);
        currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 51);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 51, d3.event.shiftKey === false)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 52);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 52, currentindex < this.core.columns.length - 1)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 53);
                d.activatedID = this.core.columns[currentindex + 1].id;
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 55);
                nextNode = this.core.utils.findNextNode(d, this.core.nodes);
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 56);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 56, nextNode !== null)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 57);
                    nextNode.activatedID = this.core.columns[0].id;
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 58);
                    d.activatedID = null;
                }
            }
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 62);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 62, currentindex > 0)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 63);
                d.activatedID = this.core.columns[currentindex - 1].id;
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 65);
                prevNode = this.core.utils.findPrevNode(d, this.core.nodes);
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 66);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 66, prevNode !== null)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 67);
                    prevNode.activatedID = this.core.columns[this.core.columns.length - 1].id;
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 68);
                    d.activatedID = null;
                }
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 72);
        d3.event.preventDefault();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 73);
        d3.event.stopPropagation();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 74);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 77);
    Events.prototype._handleUp = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 78);
        var currentindex, prevNode;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 79);
        prevNode = this.core.utils.findPrevNode(d, this.nodes);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 80);
        currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 81);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 81, prevNode !== null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 82);
            prevNode.activatedID = this.core.columns[currentindex].id;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 83);
            d.activatedID = null;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 85);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 88);
    Events.prototype._handleDown = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 89);
        var currentindex, nextNode;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 90);
        nextNode = this.core.utils.findNextNode(d);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 91);
        currentindex = this.core.utils.getCurrentColumnIndex(d.activatedID);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 92);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 92, nextNode !== null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 93);
            nextNode.activatedID = this.core.columns[currentindex].id;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 94);
            d.activatedID = null;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 96);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 99);
    Events.prototype._handleEnter = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 100);
        return this.blur(node, d, column);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 103);
    Events.prototype._handleEscape = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 104);
        d3.select(node).node().value = d[d.activatedID];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 105);
        d.activatedID = null;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 106);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 109);
    Events.prototype.blur = function(node, d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 110);
        var val;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 111);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 111, !this.core.table.isInRender)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 112);
            val = d3.select(node).text();
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 113);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 113, val !== d[d.activatedID])) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 114);
                this._applyChangedState(d);
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 115);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 115, column.onEdit)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 116);
                    column.onEdit(d.id, column.id, val);
                }
            }
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 119);
            d.activatedID = null;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 120);
            return this.core.update();
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 124);
    Events.prototype._applyChangedState = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 125);
        var _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 126);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 126, (_ref = d.changedID) == null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 127);
            d.changedID = [];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 129);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 129, d.changedID.indexOf(d.activatedID) === -1)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 130);
            return d.changedID.push(d.activatedID);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 134);
    Events.prototype.dragStart = function(tr, d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 135);
        this._makeRowDraggable(tr);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 136);
        return this.initPosition = $(tr).position();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 139);
    Events.prototype._makeRowDraggable = function(tr) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 140);
        var cellWidths, rowWidth, self, tableEl;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 141);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 142);
        rowWidth = $(tr).width();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 143);
        cellWidths = _.map($(tr).find("td"), function(td) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 144);
            return $(td).width();
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 146);
        d3.select(tr).classed("dragged", true);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 147);
        $(tr).width(rowWidth);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 148);
        _.each($(tr).find("td"), function(td, i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 149);
            return $(td).width(cellWidths[i]);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 151);
        tableEl = this.core.table.el();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 152);
        return d3.selectAll(tableEl + " tbody tr:not(.dragged), " + tableEl + " thead tr").on("mouseover", function(d, i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 153);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 153, i > 0)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 154);
                i -= 1;
            }
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 156);
            self.insertAtIndex = i;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 157);
            return d3.select(this).classed("draggable-destination", true);
        }).on("mouseout", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 159);
            return d3.select(this).classed("draggable-destination", false);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 163);
    Events.prototype.dragMove = function(tr, d, x, y) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 164);
        return $(tr).css({
            left: this.initPosition.left + d3.event.x,
            top: this.initPosition.top + d3.event.y
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 170);
    Events.prototype.dragEnd = function(tr, d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 171);
        var tableEl;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 172);
        d3.select(tr).classed("dragged", false);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 173);
        tableEl = this.core.table.el();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 174);
        d3.selectAll(tableEl + " tbody tr, " + tableEl + " thead tr").classed("draggable-destination", false).on("mouseover", null).on("mouseout", null);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 175);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 175, this.core.table.onDrag)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 176);
            return this.core.table.onDrag()(d.id, this.insertAtIndex);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 180);
    Events.prototype.resizeDrag = function(context, node, d, _, unshift) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 181);
        var column_newX, column_x, th;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 182);
        th = node.parentNode;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 183);
        column_x = parseFloat(d3.select(th).attr("width"));
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 184);
        column_newX = d3.event.x;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 185);
        d3.select(th).attr("width", column_newX + "px");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 186);
        return d3.select(th).style("width", column_newX + "px");
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 189);
    Events.prototype.editableClick = function(node, d, _, unshift) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 190);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 190, !d3.select(node).classed("active"))) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 191);
            this.core.utils.deactivateAll(this.core.data[0]);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 192);
            d.activatedID = d3.select(d3.select(node).node()).attr("meta-key");
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 193);
            this.core.update();
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 194);
            d3.event.stopPropagation();
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 195);
            return d3.event.preventDefault();
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 199);
    Events.prototype.nestedClick = function(node, d, _, unshift) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 200);
        var self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 201);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 201, d3.event.shiftKey) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 201, !unshift)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 202);
            self = this;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 203);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 203, d.values)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 204);
                d.values.forEach(function(node) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 205);
                    if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 205, node.values) || _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 205, node._values)) {
                        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 206);
                        return self.nestedClick(this, node, 0, true);
                    }
                });
            }
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 211);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 211, d.values)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 212);
                d._values = d.values;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 213);
                d.values = null;
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 215);
                d.values = d._values;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 216);
                d._values = null;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 219);
        this.core.update();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 220);
        d3.event.preventDefault();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 221);
        return d3.event.stopPropagation();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 224);
    Events.prototype.toggleBoolean = function(node, d, _, unshift, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 225);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 225, column.onEdit)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 226);
            column.onEdit(d.id, column.id, !d[column.id]);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 228);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 231);
    Events.prototype.selectClick = function(node, d, _, unshift, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 232);
        var val;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 233);
        val = d3.event.target.value;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 234);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 234, val !== d[column.id])) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 235);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 235, column.onEdit)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 236);
                column.onEdit(d.id, column.id, val);
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 239);
        return this.core.update();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 242);
    return Events;
}();

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 246);
if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 246, !window.TableStakesLib)) {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 247);
    window.TableStakesLib = {};
}

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 250);
window.TableStakesLib.Core = function() {
    function Core(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 253);
        this._makeResizable = __bind(this._makeResizable, this);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 254);
        this.utils = new window.TableStakesLib.Utils({
            core: this
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 257);
        this.events = new window.TableStakesLib.Events({
            core: this
        });
    }
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 262);
    Core.prototype.set = function(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 263);
        this.table = options.table;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 264);
        this.selection = options.selection;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 265);
        this.data = options.data;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 266);
        return this.columns = this.table.columns();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 269);
    Core.prototype.update = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 270);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 271);
        this.table.isInRender = true;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 272);
        return this.selection.transition().call(function(selection) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 273);
            return _this.table.update(selection);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 277);
    Core.prototype.render = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 278);
        var wrap, wrapEnter;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 279);
        this._buildData();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 280);
        wrap = d3.select(this.table.el()).selectAll("div").data([ [ this.nodes ] ]);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 281);
        wrapEnter = wrap.enter().append("div");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 282);
        this.tableEnter = wrapEnter.append("table");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 283);
        this.tableObject = wrap.select("table").classed(this.table.tableClassName, true).attr("style", "table-layout:fixed;");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 284);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 284, this.table.header)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 285);
            this._renderHead(this.tableObject);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 287);
        this._renderBody(this.tableObject);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 288);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 288, this.table.isDraggable() !== false)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 289);
            this._makeDraggable(this.tableObject);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 291);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 291, this.table.isDeletable() !== false)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 292);
            return this._makeDeletable(this.tableObject);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 296);
    Core.prototype._buildData = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 297);
        var depth;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 298);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 298, !this.data[0])) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 299);
            this.data[0] = {
                id: this.table.noData
            };
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 303);
        this.tree = d3.layout.tree().children(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 304);
            return d.values;
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 306);
        this.nodes = this.tree.nodes(this.data[0]);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 307);
        depth = d3.max(this.nodes, function(node) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 308);
            return node.depth;
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 310);
        return this.tree.size([ this.table.height, depth * this.table.childIndent ]);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 313);
    Core.prototype._renderHead = function(tableObject) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 314);
        var self, th, theadRow, _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 316);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 317);
        theadRow = tableObject.selectAll("thead").data(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 318);
            return d;
        }).enter().append("thead").append("tr");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 320);
        th = theadRow.selectAll("th").data(this.columns).enter().append("th").text(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 321);
            return d.label;
        }).attr("ref", function(d, i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 323);
            return i;
        }).attr("class", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 325);
            return _this._columnClasses(d);
        }).style("width", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 327);
            return d.width;
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 329);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 329, this.table.isResizable())) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 330);
            theadRow.selectAll("th").call(this._makeResizable);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 332);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 335);
    Core.prototype._renderBody = function(tableObject) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 336);
        this.tbody = tableObject.selectAll("tbody").data(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 337);
            return d;
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 339);
        this.tbody.enter().append("tbody");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 340);
        return this._renderRows();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 343);
    Core.prototype._enterRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 344);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 345);
        return this.enterRows = this.rows.enter().append("tr").attr("class", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 346);
            return _this._rowClasses(d);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 350);
    Core.prototype._updateRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 351);
        var self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 352);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 353);
        this.updateRows = this.rows.order();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 354);
        this._addRowEventHandling();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 355);
        return this.updateRows.select(".expandable").classed("folded", this.utils.folded);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 358);
    Core.prototype._addRowEventHandling = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 359);
        var addEvent, events, _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 361);
        events = {
            click: "elementClick",
            dblclick: "elementDblclick",
            mouseover: "elementMouseover",
            mouseout: "elementMouseout"
        };
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 367);
        addEvent = function(key, value) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 368);
            return _this.updateRows.on(key, function(d) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 369);
                return _this.table.dispatch.elementClick({
                    row: _this,
                    data: d,
                    pos: [ d.x, d.y ]
                });
            });
        };
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 376);
        return _.each(events, function(value, key) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 377);
            return addEvent(key, value);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 381);
    Core.prototype._exitRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 382);
        return this.rows.exit().remove();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 385);
    Core.prototype._renderRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 386);
        this.rows = this.tbody.selectAll("tr").data(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 387);
            return d;
        }, function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 389);
            return d.id;
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 391);
        this._enterRows();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 392);
        this._updateRows();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 393);
        this._exitRows();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 394);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 394, this.enterRows[0][0])) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 395);
            d3.select(this.enterRows[0][0]).style("display", "none");
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 397);
        this._renderEnterRows();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 398);
        return this._renderUpdateRows();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 401);
    Core.prototype._renderEnterRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 402);
        var self, _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 404);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 405);
        return this.columns.forEach(function(column, column_index) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 406);
            return _this.enterRows.append("td").each(function(d, i) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 407);
                return self._renderCell(column, d, this);
            });
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 412);
    Core.prototype._renderUpdateRows = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 413);
        var self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 414);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 415);
        return this.updateRows.selectAll("td").each(function(d, i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 416);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 416, self.columns[i] != null)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 417);
                return self._renderCell(self.columns[i], d, this);
            }
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 422);
    Core.prototype._renderCell = function(column, d, td) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 423);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 424);
        d3.select(td).attr("meta-key", column.id).attr("class", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 425);
            return _this._cellClasses(d, column);
        }).text(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 427);
            return d[column.id] || "-";
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 429);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 429, this.utils.ourFunctor(column.isNested, d))) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 430);
            this._makeNested(td);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 432);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 432, this.utils.ourFunctor(column.isEditable, d))) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 433);
            this._makeEditable(d, td, column);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 435);
        this._makeChanged(d, td, column);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 436);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 436, column.editor === "boolean")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 437);
            this._makeBoolean(d, td, column);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 439);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 439, column.editor === "select")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 440);
            this._makeSelect(d, td, column);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 442);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 442, column.showCount)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 443);
            return this._addShowCount(d, td, column);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 447);
    Core.prototype._columnClasses = function(column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 448);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 448, typeof column.classes !== "function")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 449);
            return column.classes;
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 453);
    Core.prototype._rowClasses = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 454);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 454, this.table.rowClasses() != null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 455);
            return this.table.rowClasses()(d);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 459);
    Core.prototype._cellClasses = function(d, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 460);
        var val;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 461);
        val = [];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 462);
        val.push(column.classes != null ? typeof column.classes === "function" ? column.classes(d) : column.classes : void 0);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 463);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 463, column === this.columns[0])) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 464);
            val.push(this.utils.nestedIcons(d));
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 466);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 466, d.classes != null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 467);
            val.push(d.classes);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 469);
        return val.join(" ");
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 472);
    Core.prototype._makeDraggable = function(table) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 473);
        var self, _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 475);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 476);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 476, table.selectAll("th.draggable-head")[0].length === 0)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 477);
            table.selectAll("thead tr").append("th").attr("width", "15px").classed("draggable-head", true);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 479);
        this.enterRows.append("td").classed("draggable", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 480);
            return _this.utils.ourFunctor(_this.table.isDraggable(), d);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 482);
        return this.updateRows.selectAll("td.draggable").on("mouseover", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 483);
            return self._setDragBehavior();
        }).on("mouseout", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 485);
            return self._clearDragBehavior();
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 489);
    Core.prototype._setDragBehavior = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 490);
        var dragBehavior, self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 491);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 492);
        dragBehavior = d3.behavior.drag().origin(Object).on("dragstart", function(d, x, y) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 493);
            return self.events.dragStart(this, d, x, y);
        }).on("drag", function(d, x, y) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 495);
            return self.events.dragMove(this, d, x, y);
        }).on("dragend", function(d, x, y) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 497);
            return self.events.dragEnd(this, d, x, y);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 499);
        return self.updateRows.call(dragBehavior);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 502);
    Core.prototype._clearDragBehavior = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 503);
        return this.updateRows.on("dragstart", null).on("drag", null).on("dragend", null);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 506);
    Core.prototype._makeDeletable = function(table) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 507);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 508);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 508, table.selectAll("th.deletable-head")[0].length === 0)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 509);
            table.selectAll("thead tr").append("th").attr("width", "15px").classed("deletable-head", true);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 511);
        return this.updateRows.append("td").classed("deletable", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 512);
            return _this.utils.ourFunctor(_this.table.isDeletable(), d);
        }).on("click", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 514);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 514, _this.utils.ourFunctor(_this.table.isDeletable(), d))) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 515);
                return _this.table.onDelete()(d.id);
            }
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 520);
    Core.prototype._makeResizable = function(th) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 521);
        var dragBehavior, self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 522);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 523);
        dragBehavior = d3.behavior.drag().on("drag", function(a, b, c) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 524);
            return self.events.resizeDrag(self, this, a, b, c);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 526);
        return th.classed("resizeable", true).append("div").classed("resizeable-handle right", true).call(dragBehavior);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 529);
    Core.prototype._makeNested = function(td) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 530);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 531);
        return d3.select(td).attr("class", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 532);
            return _this.utils.nestedIcons(d);
        }).on("click", function(a, b, c) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 534);
            return _this.events.nestedClick(_this, a, b, c);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 538);
    Core.prototype._makeEditable = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 539);
        var eventType, self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 540);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 541);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 541, _.contains([ "boolean", "select" ], column.editor))) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 542);
            return;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 544);
        d3.select(td).classed("editable", true);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 545);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 545, column.editor === "calendar")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 546);
            d3.select(td).classed("calendar", true);
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 548);
        eventType = column.isNested ? "dblclick" : "click";
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 549);
        d3.select(td).on(eventType, function(a, b, c) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 550);
            return self.events.editableClick(this, a, b, c, column);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 552);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 552, d.activatedID === column.id)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 553);
            return this._makeActive(d, td, column);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 557);
    Core.prototype._makeActive = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 558);
        var self;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 559);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 560);
        return d3.select(td).classed("active", true).attr("contentEditable", true).on("keydown", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 561);
            return self.events.keydown(this, d, column);
        }).on("blur", function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 563);
            return self.events.blur(this, d, column);
        }).node().focus();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 567);
    Core.prototype._makeChanged = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 568);
        var i;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 569);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 569, d.changedID) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 569, (i = d.changedID.indexOf(column.id)) !== -1)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 570);
            d3.select(td).classed("changed", true);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 571);
            return d.changedID.splice(i, 1);
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 575);
    Core.prototype._makeSelect = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 576);
        var group, select, _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 578);
        select = d3.select(td).html('<select class="expand-select"></select>').select(".expand-select");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 579);
        select.append("option").style("cursor", "pointer").text(d[column.id]);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 580);
        group = select.append("optgroup").style("cursor", "pointer");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 581);
        _.each(_.without(column.selectOptions, d[column.id]), function(item) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 582);
            return group.append("option").style("cursor", "pointer").text(item);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 584);
        return select.on("change", function(a, b, c) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 585);
            return _this.events.selectClick(_this, a, b, c, column);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 589);
    Core.prototype._makeBoolean = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 590);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 591);
        return d3.select(td).classed("boolean-true", d[column.id]).classed("boolean-false", !d[column.id]).on("click", function(a, b, c) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 592);
            return _this.events.toggleBoolean(_this, a, b, c, column);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 596);
    Core.prototype._addShowCount = function(d, td, column) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 597);
        var count, _ref, _ref1;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 598);
        count = ((_ref = d.values) != null ? _ref.length : void 0) || ((_ref1 = d._values) != null ? _ref1.length : void 0);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 599);
        return d3.select(td).append("span").classed("childrenCount", true).text(function(d) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 600);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 600, count)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 601);
                return "(" + count + ")";
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 603);
                return "";
            }
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 608);
    return Core;
}();

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 612);
window.TableStakes = function() {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 614);
    TableStakes.prototype.id = Math.floor(Math.random() * 1e4);
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 616);
    TableStakes.prototype.header = true;
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 618);
    TableStakes.prototype.noData = "No Data Available.";
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 620);
    TableStakes.prototype.childIndent = 20;
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 622);
    TableStakes.prototype.tableClassName = "tablestakes";
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 624);
    TableStakes.prototype.gridData = [];
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 626);
    TableStakes.prototype.gridFilteredData = [];
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 628);
    TableStakes.prototype.tableObject = null;
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 630);
    TableStakes.prototype.isInRender = false;
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 632);
    TableStakes.prototype.filterCondition = [];
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 634);
    TableStakes.prototype.dispatch = d3.dispatch("elementClick", "elementDblclick", "elementMouseover", "elementMouseout");
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 636);
    TableStakes.prototype._columns = [];
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 638);
    TableStakes.prototype._margin = {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0
    };
    function TableStakes(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 646);
        var key;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 647);
        this.core = new window.TableStakesLib.Core;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 648);
        this._synthesize({
            data: [],
            el: null,
            isDeletable: false,
            onDelete: null,
            isResizable: true,
            isSortable: false,
            dragMode: null,
            isDraggable: false,
            onDrag: null,
            isDragDestination: false,
            rowClasses: null
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 661);
        this.filterCondition = d3.map([]);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 662);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 662, options != null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 663);
            for (key in options) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 664);
                this.set(key, options[key]);
            }
        }
    }
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 669);
    TableStakes.prototype.render = function() {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 670);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 671);
        this.gridData = [ {
            values: this.data()
        } ];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 676);
        this.columns().forEach(function(column, i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 677);
            return _this.gridData[0][column["id"]] = column["id"];
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 679);
        this.setID(this.gridData[0], "0");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 680);
        this.gridFilteredData = this.gridData;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 681);
        this._setFilter(this.gridFilteredData[0], this.filterCondition);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 682);
        d3.select(this.el()).html("").datum(this.gridFilteredData).call(function(selection) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 683);
            return _this.update(selection);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 685);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 688);
    TableStakes.prototype.update = function(selection) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 689);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 690);
        selection.each(function(data) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 691);
            _this.core.set({
                selection: selection,
                table: _this,
                data: data
            });
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 696);
            return _this.core.render();
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 698);
        this.isInRender = false;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 699);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 702);
    TableStakes.prototype.dispatchManualEvent = function(target) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 703);
        var mousedownEvent;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 704);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 704, target.dispatchEvent) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 704, document.createEvent)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 705);
            mousedownEvent = document.createEvent("MouseEvent");
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 706);
            mousedownEvent.initMouseEvent("dblclick", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 707);
            target.dispatchEvent(mousedownEvent);
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 709);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 709, document.createEventObject)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 710);
                mousedownEvent = document.createEventObject(window.event);
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 711);
                mousedownEvent.button = 1;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 712);
                target.fireEvent("dblclick", mousedownEvent);
            }
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 717);
    TableStakes.prototype.setID = function(node, prefix) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 718);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 719);
        node["_id"] = prefix;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 720);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 720, node.values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 721);
            node.values.forEach(function(subnode, i) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 722);
                return _this.setID(subnode, prefix + "_" + i);
            });
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 725);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 725, node._values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 726);
            return node._values.forEach(function(subnode, i) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 727);
                return _this.setID(subnode, prefix + "_" + i);
            });
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 732);
    TableStakes.prototype.filter = function(key, value) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 733);
        value = value || "";
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 734);
        value = value.toString().toUpperCase();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 735);
        this.filterCondition.set(key, value);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 736);
        this._setFilter(this.gridFilteredData[0], this.filterCondition);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 737);
        return this.render();
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 740);
    TableStakes.prototype._setFilter = function(data, filter) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 741);
        var i, key, matchFound, self, _data, _i, _j, _k, _len, _ref, _ref1, _ref2;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 742);
        self = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 743);
        data || (data = []);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 744);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 744, typeof data._hiddenvalues === "undefined")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 745);
            data["_hiddenvalues"] = [];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 747);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 747, data.values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 748);
            data.values = data.values.concat(data._hiddenvalues);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 749);
            data._hiddenvalues = [];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 750);
            for (i = _i = _ref = data.values.length - 1; _i >= 0; i = _i += -1) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 751);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 751, this._setFilter(data.values[i], filter) === null)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 752);
                    data._hiddenvalues.push(data.values.splice(i, 1)[0]);
                }
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 756);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 756, data._values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 757);
            data._values = data._values.concat(data._hiddenvalues);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 758);
            data._hiddenvalues = [];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 759);
            for (i = _j = _ref1 = data._values.length - 1; _j >= 0; i = _j += -1) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 760);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 760, this._setFilter(data._values[i], filter) === null)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 761);
                    data._hiddenvalues.push(data._values.splice(i, 1)[0]);
                }
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 765);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 765, data.values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 765, data.values.length > 0)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 766);
            return data;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 768);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 768, data._values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 768, data._values.length > 0)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 769);
            return data;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 771);
        matchFound = true;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 772);
        _ref2 = filter.keys();
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 773);
        for (_k = 0, _len = _ref2.length; _k < _len; _k++) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 774);
            key = _ref2[_k];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 775);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 775, data[key])) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 776);
                _data = data[key].toUpperCase();
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 777);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 777, _data.indexOf(filter.get(key)) === -1)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 778);
                    matchFound = false;
                }
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 781);
                matchFound = false;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 784);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 784, matchFound)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 785);
            return data;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 787);
        return null;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 790);
    TableStakes.prototype.get = function(key) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 791);
        return this[key];
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 794);
    TableStakes.prototype.set = function(key, value, options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 795);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 795, key != null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 796);
            this[key] = value != null ? value : true;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 798);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 801);
    TableStakes.prototype.is = function(key) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 802);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 802, this[key])) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 803);
            return true;
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 805);
            return false;
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 809);
    TableStakes.prototype.margin = function(val) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 810);
        var side, _i, _len, _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 811);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 811, val == null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 812);
            return this._margin;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 814);
        _ref = [ "top", "right", "bottom", "left" ];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 815);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 816);
            side = _ref[_i];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 817);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 817, typeof val[side] !== "undefined")) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 818);
                this._margin[side] = val[side];
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 821);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 824);
    TableStakes.prototype.columns = function(val) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 825);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 826);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 826, val == null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 827);
            return this._columns;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 829);
        this._columns = [];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 830);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 830, !_.isArray(val))) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 831);
            val = [ val ];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 833);
        _.each(val, function(column) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 834);
            var c;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 835);
            c = new window.TableStakesLib.Column(column);
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 836);
            return _this._columns.push(c);
        });
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 838);
        return this;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 841);
    TableStakes.prototype._synthesize = function(hash) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 842);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 843);
        return _.each(hash, function(value, key) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 844);
            var func;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 845);
            _this["_" + key] = value;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 846);
            func = function(key) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 847);
                return _this[key] = function(val) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 848);
                    if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 848, val == null)) {
                        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 849);
                        return this["_" + key];
                    }
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 851);
                    this["_" + key] = val;
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 852);
                    return this;
                };
            };
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 855);
            return func(key);
        });
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 859);
    return TableStakes;
}();

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 863);
if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 863, !window.TableStakesLib)) {
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 864);
    window.TableStakesLib = {};
}

_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 867);
window.TableStakesLib.Utils = function() {
    function Utils(options) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 870);
        this.core = options.core;
    }
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 873);
    Utils.prototype.getCurrentColumnIndex = function(id) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 874);
        var col, currentindex, i, _i, _len, _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 875);
        currentindex = this.core.columns.length;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 876);
        _ref = this.core.columns;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 877);
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 878);
            col = _ref[i];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 879);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 879, col.id === id)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 880);
                currentindex = i;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 881);
                break;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 884);
        return currentindex;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 887);
    Utils.prototype.findNextNode = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 888);
        var i, idPath, leaf, nextNodeID, root, _i, _j, _len, _ref, _ref1;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 889);
        nextNodeID = null;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 890);
        _ref = this.core.nodes;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 891);
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 892);
            leaf = _ref[i];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 893);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 893, leaf._id === d._id)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 894);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 894, this.core.nodes.length !== i + 1)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 895);
                    nextNodeID = this.core.nodes[i + 1]._id;
                }
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 897);
                break;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 900);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 900, nextNodeID === null)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 901);
            return null;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 903);
        idPath = nextNodeID.split("_");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 904);
        root = this.core.data[0];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 905);
        for (i = _j = 1, _ref1 = idPath.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 906);
            root = root.values[parseInt(idPath[i])];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 908);
        return root;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 911);
    Utils.prototype.findPrevNode = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 912);
        var i, idPath, leaf, prevNodeID, root, _i, _j, _len, _ref, _ref1;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 913);
        prevNodeID = null;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 914);
        _ref = this.core.nodes;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 915);
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 916);
            leaf = _ref[i];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 917);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 917, leaf._id === d._id)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 918);
                break;
            }
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 920);
            prevNodeID = leaf._id;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 922);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 922, prevNodeID === null) || _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 922, prevNodeID === "0")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 923);
            return null;
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 925);
        idPath = prevNodeID.split("_");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 926);
        root = this.core.data[0];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 927);
        for (i = _j = 1, _ref1 = idPath.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 928);
            root = root.values[parseInt(idPath[i])];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 930);
        return root;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 933);
    Utils.prototype.removeNode = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 934);
        var currentindex, i, parent, _i, _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 935);
        parent = d.parent;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 936);
        currentindex = parent.values.length;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 937);
        for (i = _i = 0, _ref = parent.values.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 938);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 938, d._id === parent.values[i]._id)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 939);
                currentindex = i;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 940);
                break;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 943);
        parent.values.splice(currentindex, 1);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 944);
        parent.children.splice(currentindex, 1);
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 945);
        return this.core.table.setID(parent, parent._id);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 948);
    Utils.prototype.appendNode = function(d, child) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 949);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 949, d.values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 950);
            d.values.push(child);
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 951);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 951, d._values)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 952);
                d._values.push(child);
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 954);
                d.values = [ child ];
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 956);
        return this.core.table.setID(d, d._id);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 959);
    Utils.prototype.pastNode = function(d, child) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 960);
        var array, index, n, _i, _len, _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 961);
        n = 0;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 962);
        array = [];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 963);
        _ref = d.parent.values;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 964);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 965);
            index = _ref[_i];
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 966);
            array[n] = index;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 967);
            n = n + 1;
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 968);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 968, d === index)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 969);
                array[n] = child;
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 970);
                n = n + 1;
            }
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 973);
        d.parent.values = array;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 974);
        return this.core.table.setID(d.parent, d.parent._id);
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 977);
    Utils.prototype.findNodeByID = function(id) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 978);
        var i, idPath, root, _i, _ref;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 979);
        idPath = id.split("_");
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 980);
        root = this.core.table.gridFilteredData[0];
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 981);
        for (i = _i = 1, _ref = idPath.length - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 982);
            root = root.values[parseInt(idPath[i])];
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 984);
        return root;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 987);
    Utils.prototype.deactivateAll = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 988);
        var _this = this;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 989);
        d.activatedID = null;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 990);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 990, d.values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 991);
            d.values.forEach(function(item, index) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 992);
                return _this.core.utils.deactivateAll(item);
            });
        }
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 995);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 995, d._values)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 996);
            d._values.forEach(function(item, index) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 997);
                return _this.core.utils.deactivateAll(item);
            });
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1002);
    Utils.prototype.hasChildren = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1003);
        var values;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1004);
        values = d.values || d._values;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1005);
        return values && values.length;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1008);
    Utils.prototype.folded = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1009);
        return d._values && d._values.length;
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1012);
    Utils.prototype.nestedIcons = function(d) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1013);
        var indent;
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1014);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1014, d.depth !== 1)) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1015);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1015, d.depth - 1 < 6)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1016);
                indent = d.depth - 1;
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1018);
                indent = 6;
            }
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1020);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1020, d._values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1020, d._values.length)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1021);
                return "expandable" + " " + "indent" + indent;
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1023);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1023, d.values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1023, d.values.length)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1024);
                    return "collapsible" + " " + "indent" + indent;
                } else {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1026);
                    return "indent" + (indent + 1);
                }
            }
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1029);
            if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1029, d.children == null)) {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1030);
                return "indent1";
            } else {
                _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1032);
                if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1032, d._values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1032, d._values.length)) {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1033);
                    return "expandable";
                } else {
                    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1035);
                    if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1035, d.values) && _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1035, d.values.length)) {
                        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1036);
                        return "collapsible";
                    } else {
                        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1038);
                        return "indent1";
                    }
                }
            }
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1044);
    Utils.prototype.ourFunctor = function(attr, element) {
        _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1045);
        if (_$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1045, typeof attr === "function")) {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1046);
            return attr(element);
        } else {
            _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1048);
            return attr;
        }
    };
    _$jscoverage_done("/Users/adamrneary/Developer/tablestakes/test/../dist/tablestakes.js", 1052);
    return Utils;
}();